# vpr RAPTOR_PATH/share/raptor/etc/devices/gemini_10x8/gemini_vpr.xml \
vpr {} \
{} \
{} \
--clock_modeling ideal \
--device {} \
{} \
{} \
{} \
--route_chan_width 200 \
--sdc_file and2_openfpga.sdc \
--absorb_buffer_luts off \
--constant_net_method route \
--skip_sync_clustering_and_routing_results on \
--circuit_format {} \
--allow_dangling_combinational_nodes on
# --analysis
# --post_synth_netlist_unconn_inputs vcc

# Read OpenFPGA architecture definition
# read_openfpga_arch -f RAPTOR_PATH/share/raptor/etc/devices/gemini_10x8/gemini_openfpga.xml
read_openfpga_arch -f {}

# Read OpenFPGA simulation settings
# read_openfpga_simulation_setting -f RAPTOR_PATH/share/raptor/etc/devices/gemini_10x8/fixed_sim_openfpga.xml
read_openfpga_simulation_setting -f {}

# read_openfpga_bitstream_setting -f RAPTOR_PATH/share/raptor/etc/devices/gemini_10x8/bitstream_setting.xml
read_openfpga_bitstream_setting -f {}

# Annotate the OpenFPGA architecture to VPR data base
# to debug use --verbose options
link_openfpga_arch --sort_gsb_chan_node_in_edges 

pb_pin_fixup

# Apply fix-up to Look-Up Table truth tables based on packing results
lut_truth_table_fixup

# Build the module graph
#  - Enabled compression on routing architecture modules
#  - Enable pin duplication on grid modules
build_fabric --frame_view --compress_routing --duplicate_grid_pin 

# Repack the netlist to physical pbs
# This must be done before bitstream generator and testbench generation
# Strongly recommend it is done after all the fix-up have been applied
# repack --design_constraints RAPTOR_PATH/share/raptor/etc/devices/gemini_10x8/fpga_repack_constraints.xml
repack --design_constraints {}

build_architecture_bitstream

build_fabric_bitstream
write_fabric_bitstream --format xml --file {}
write_fabric_bitstream --format plain_text --file {}
write_io_mapping -f PinMapping.xml

# Finish and exit OpenFPGA
exit

